#Conda environments 
#------------------------------------------------------------------------------------------------

    #Installing Conda/Miniconda

        //docs.conda.io/en/latest/

    #Create environments

        conda create -n <env-name>
        #conda create -n env1

    #List of environments

        conda info --envs

    #Location

        base:  /home/username/Anaconda3
        <env-name>:   /home/username/Anaconda3/envs/<env-name>
        #env1:   /home/username/Anaconda3/envs/env1

    #Activation/Deactivation 

        conda activate <env-name>
        #conda activate env1

        conda activate
        #Return base environment

        conda deactivate
        #current environment

    #Versión

        conda --version
        conda update conda

#------------------------------------------------------------------------------------------------

#Quality control
#------------------------------------------------------------------------------------------------

    #Installing fastqc and multiqc 

        conda activate env1
        conda install -c conda-forge -c bioconda fastqc 
        conda install -c conda-forge -c bioconda multiqc

    #Locate raw files

        /home/username/fastq_raw_files
        #<R1_Seq>.fastq.gz
        #<R2_Seq>.fastq.gz

    #Initial quality control check

        fastqc <R1_Seq>.fastq.gz
        fastqc <R2_Seq>.fastq.gz

        multiqc <R1_Seq>_fastqc.zip <R2_Seq>_fastqc.zip
        #check file multiqc_report.html 

        md5sum -c md5sum.txt
        #check integrity files

    #Installing Trimmmomatic

        conda install -c conda-forge -c bioconda trimmomatic 

    #Searching for adapters

        ls -l Downloads/Trimmomatic-0.39/adapters/
        cp Downloads/Trimmomatic-0.39/adapters/NexteraPE-PE.fa .
        #copy adapters file to work folder

    #Run Trimmomatic

        java -jar Downloads/Trimmomatic-0.39/trimmomatic-0.39.jar PE <R1_Seq>.fastq.gz <R2_Seq>.fastq.gz -threads 8 -baseout <Trimmed>.fastq.gz ILLUMINACLIP:NexteraPE-PE.fa:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:10:30 MINLEN:50 AVGQUAL:25

    #Create folder for trimmed files

        mkdir fastq_trimmed
        #/home/username/fastq_trimmed

        mv <1P>.fastq.gz <1U>.fastq.gz <2P>.fastq.gz <2U>.fastq.gz /home/username/fastq_trimmed
        #cp <1P>.fastq.gz <1U>.fastq.gz <2P>.fastq.gz <2U>.fastq.gz /home/username/fastq_trimmed

        #<1P>.fastq.gz <1U>.fastq.gz
        #pair 1 paired and unpaired respectively
        #<2P>.fastq.gz <2U>.fastq.gz
        #pair 2 paired and unpaired respectively

    #Performing new quality control check

        fastqc <Trimmed>_1P.fastq.gz
        fastqc <Trimmed>_2P.fastq.gz
        multiqc <Trimmed>_1P_fastqc.zip <Trimmed>_2_2P_fastqc.zip

#------------------------------------------------------------------------------------------------

#Genome Assembly 
#------------------------------------------------------------------------------------------------

    #Installing Kmergenie for Velvet assembly 

        conda activate env1
        conda install -n env1 -c conda-forge -c bioconda kmergenie readfq
        #installing dependencies 

        sudo apt-get install build-essential
        wget http://kmergenie.bx.psu.edu/kmergenie-1.7051.tar.gz
        tar xfz kmergenie-1.7051.tar.gz
        cd kmergenie-1.7051
        make
        python setup.py install --user
        #installing from source code

    #Run Kmergenie

        ./kmergenie /home/username/fastq_trimmed/<Trimmed>_1P.fastq.gz
        #Can select both <Trimmed>_1P.fastq.gz or <Trimmed>_2P.fastq.gz

    #Installing genomes assemblers

        conda activate env1
        conda install -c conda-forge -c bioconda velvet
        conda install -c conda-forge -c bioconda unicycler
        conda install -c conda-forge -c bioconda soapdenovo2

    #Perform Velvet assembly

        velveth velvet.k<kmer_value> <kmer_value> -shortPaired -separate -fastq <Trimmed>_1P.fastq.gz <Trimmed>_2P.fastq.gz
        velvetg velvet.k<kmervalue> -exp_cov auto -cov_cutoff auto
    
    #Perform Unicycler assembly

        unicycler -t 8 --mode normal -1 <Trimmed>_1P.fastq.gz -2 <Trimmed>_2P.fastq.gz -o unicycler.default

    #Perform SOAPdenovo assembly

        nano SOAP.conf 

            # maximal read length
            max_rd_len=150

            [LIB]
            # average insert size
            avg_ins=450

            # if sequence needs to be
            reversed reverse_seq=0

            # in which part(s) the reads are used
            asm_flags=3

            # use only first 50 bps of each read
            rd_len_cutoff=150

            # in which order the reads are used while scaffolding
            rank=1

            # cutoff of pair number for a reliable connection (default 3)
            pair_num_cutoff=3

            # minimum aligned length to contigs for a reliable read location (default 32)
            map_len=32

            # fastq file for read 1
            q1=<Trimmed>_1P.fastq.gz

            # fastq file for read 2 always follows fastq file for read 1
            q2=<Trimmed>_2P.fastq.gz

        #save file

        SOAPdenovo-127mer all -s SOAP.conf -p 12 -K <kmer_value> -R -o soap.K<kmer_value>

        mkdir soap.k<kmer_value>
        mv soap.K<kmer_value>* soap.k<kmer_value>

    #Acquire assembly quality metrics

        wget https://github.com/jomaldon/scripts_bioinfo/raw/master/N50_line.v2.pl
        chmod 777 N50_line.v2.pl
        mkdir ~/bin
        mv N50_line.v2.pl ~/bin

        N50_line.v2.pl contigs.fa
        find . -name contigs.fa | xargs -I {} N50_line.v2.pl {}
        #velvet

        50_line.v2.pl assembly.fasta
        #Unicycler

        N50_line.v2.pl soap.K<kmer_value>.scafSeq
        #SOAPdenovo

#------------------------------------------------------------------------------------------------

#Genome Annotation 
#------------------------------------------------------------------------------------------------
    
    #Structural annonation

        conda activate env1
        conda install -c conda-forge -c bioconda prodigal

        prodigal -i assembly.fasta -o assembly.gff -d genes.fna -a proteins.faa -f gff

    #Functional annotation

        conda activate env1
        conda install -c conda-forge -c bioconda -c defaults prokka

        prokka contigs.fa
        grep -c ‘<RNAs>’ *
        #search of rRNAs/tRNAs/genes/codded-proteins in prokka files

#------------------------------------------------------------------------------------------------

#Genome completeness 
#------------------------------------------------------------------------------------------------

    #Create new conda environment

        conda deactivate
        conda create -n env2 -c conda-forge -c bioconda busco=5.4.3
        conda activate env2

    #Run BUSCO 

        busco -m protein -l bacteria_odb10 -i proteins.faa -o busco.prot.bacteria
        busco -m protein -l firmicutes_odb10 -i proteins.faa -o busco.prot.firmicutes
        busco -m protein -l bacilli_odb10 -i proteins.faa -o busco.prot.bacilli
        busco -m protein -l bacillales_odb10 -i proteins.faa -o busco.prot.bacillales
        #input proteins.faa files from Prodigal annotation

        find . -name "short_summary.txt" | xargs cat

#------------------------------------------------------------------------------------------------

#Genome scaffolding
#------------------------------------------------------------------------------------------------

    #Install MUMmer

        wget https://sourceforge.net/projects/mummer/files/latest/download
        tar -xvzf MUMmer3.0.tar.gz

        order_contigs_with_abacas -a <FASTA> -c <FASTA>
        #-a assembly FASTA(.gz) file
        #-c reference genome FASTA(.gz) file
    
    #IMPORTANT
    #Genomic data present in assemled genome and abscent in reference genome can be discarded

#------------------------------------------------------------------------------------------------

#Genome visual representation
#------------------------------------------------------------------------------------------------

    #Create conda environment

        conda create -n env3 python=3.7 circos 
        conda activate env3
        pip install genovi

    #Run Genovi

        genovi [-h] [options ..] -i <input_file> -s status
        #input annotated genomes .gbk .gbff

#------------------------------------------------------------------------------------------------

#Blastn search
#------------------------------------------------------------------------------------------------

    https://www.ncbi.nlm.nih.gov/genbank/
    #Search of .fna files
    wget

    blastn -query <Fasta file> -subject <fasta file> -evalue 1e-50 -num_alignments 5 -outfmt "7 qseqid sseqid qlen qframe qstart qend slen sframe sstart send pident evalue bitscore length mismatch gapopen" -num_threads 2 -out query_vs_subject.txt

#------------------------------------------------------------------------------------------------

#Mobile genetic element SCCmec search
#------------------------------------------------------------------------------------------------

    #Download SCCmecfinder

        #https://bitbucket.org/genomicepidemiology/sccmecfinder/src/master/
        wget https://bitbucket.org/genomicepidemiology/sccmecfinder/src/master/SCCmecFinder_v4.py
        wget https://bitbucket.org/genomicepidemiology/sccmecfinder/src/master/script_dir/

    #Run SCCmecfinder
        
        SCCmecFinder_v4.py [-h] -iDb FASTA_FILE_DB -iKm FASTA_FILE_KM -k ID_THRESHOLD -l LEN_THRESHOLD -o OUTPUT_FILE -d OUTPUT_DIR -db_dir DATABASE_DIR -sc_dir SCRIPT_DIR -db_choice DATABASE_CHOICE
        #Main command

        python2 SCCmecFinder_v4.py -iDb <Fasta file> -iKm whole_cassette_SCCmec_database_EXTENDED_20171117.fasta -k 0.9 -l 0.6 -o extended1 -d extended1 -db_dir sccmecfinder_db -sc_dir script_dir -db_choice extended
        #Database extended

        python2 SCCmecFinder_v4.py -iDb <Fasta file> -iKm whole_cassette_SCCmec_database_REFERENCE_20171117.fasta -k 0.9 -l 0.6 -o reference1 -d reference1 -db_dir sccmecfinder_db -sc_dir script_dir -db_choice reference
        #Database reference

#------------------------------------------------------------------------------------------------

#Pangenome analysis
#------------------------------------------------------------------------------------------------

    #Genomes search

        https://www.ncbi.nlm.nih.gov/genome/
        #search of .gff files
        wget <files>.gff

    #Installing roary

        conda config --add channels r
        conda config --add channels defaults
        conda config --add channels conda-forge
        conda config --add channels bioconda
        conda install roary
    
    #Run roary

        roary -f <name.percentage> -cd <percentage> -e -n -p 12 *.gff
        cd <name.percentage>
        FastTree -nt -gtr core_gene_alignment.aln > <name.percetage.netwick>
        mv core_gene_alignment.aln core_gene_alignment.aln.fasta
#------------------------------------------------------------------------------------------------

#MEGA analysis
#------------------------------------------------------------------------------------------------
    
    https://www.megasoftware.net/

    megacc <file>.mao
    megacc –a settings.mao –d alignment.meg –o outFile
    #CC

    megax 
    #GUI
#------------------------------------------------------------------------------------------------



